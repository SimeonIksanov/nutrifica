@using Microsoft.AspNetCore.Components.Authorization
@using Nutrifica.Spa.Infrastructure.Services.Authentication
@inject NutrificaAuthenticationStateProvider AuthStateProvider;
@implements IDisposable

<AuthorizeView>
    <Authorized>
        <MudMenu FullWidth="true" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter">
            <ActivatorContent>
                <MudChip
                    Icon="@Icons.Material.Filled.Person"
                    Color="Color.Primary">
                    Привет, @AuthStateProvider.CurrentUser.FirstName
                </MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="OnChangePasswordClicked">
                    Сменить пароль
                </MudMenuItem>
                <MudMenuItem OnClick="OnLogoutClicked">
                    Выйти
                </MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
</AuthorizeView>

@code {
    private CancellationTokenSource? _cancellationTokenSource;

    public async Task OnLogoutClicked()
    {
        _cancellationTokenSource = new();
        await AuthStateProvider.Logout(_cancellationTokenSource!.Token);
    }

    private void OnChangePasswordClicked(MouseEventArgs obj)
    {
        Console.WriteLine("OnChangePasswordClicked");
    }

    public void Dispose()
    {
        _cancellationTokenSource?.Cancel();
        _cancellationTokenSource?.Dispose();
        _cancellationTokenSource = null;
    }

}
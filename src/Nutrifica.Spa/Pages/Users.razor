@page "/Users"
@using Nutrifica.Api.Contracts.Users.Responses
@using Nutrifica.Shared.Wrappers
@using Nutrifica.Spa.Infrastructure.Services.Users
@inject IUserService UserService
@implements IDisposable
@inject ISnackbar Snackbar

<h3>Users</h3>
Welcome to your new app.<br/>
<MudDataGrid Items="@users?.Items" Dense="true" Striped="true" Bordered="true" ColumnResizeMode="ResizeMode.Column">
    <Columns>
        <PropertyColumn Property="x => x.Username"/>
        <PropertyColumn Property="x => x.FirstName"/>
        <PropertyColumn Property="x => x.MiddleName"/>
        <PropertyColumn Property="x => x.LastName"/>
        <PropertyColumn Property="x => x.Email"/>
        <PropertyColumn Property="x => x.PhoneNumber"/>
        <PropertyColumn Property="x => x.Supervisor == null ? string.Empty : string.Join(' ', x.Supervisor.FirstName, x.Supervisor.LastName)"/>
        <PropertyColumn Property="x => x.Role.ToString()"/>
        <PropertyColumn Property="x => x.Enabled"/>
        @* <PropertyColumn Property="x=>x.DisableReason" /> *@
        <PropertyColumn Property="x => x.CreatedAt"/>
    </Columns>
</MudDataGrid>


@code {
    private PagedList<UserResponse>? users;
    private CancellationTokenSource? _cancellationTokenSource;

    protected override async Task OnInitializedAsync()
    {
        _cancellationTokenSource = new CancellationTokenSource();
        var result = await UserService.Get(_cancellationTokenSource.Token);
        if (result.IsFailure)
        {
            Snackbar.Add(result.Error.Description, Severity.Error);
        }
        else
        {
            users = result.Value;
        }
    }

    public void Dispose()
    {
        _cancellationTokenSource?.CancelAsync();
        _cancellationTokenSource?.Dispose();
    }

}